<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as
		beans -->
	<context:component-scan base-package="org.archboy.clobaframe">
		<!-- include aspect annotation -->
		<!--
		<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
		-->
		<!-- exclude the the web package -->
		<!--
		<context:exclude-filter type="regex" expression="org\.archboy\.clobaframe\.web\.view\..*"/>
		<context:exclude-filter type="regex" expression="org\.archboy\.clobaframe\.web\.controller\..*"/>
		-->
	</context:component-scan>

	<!-- enable AspectJ annotation -->
	<!--
	<aop:aspectj-autoproxy />
	-->

	<!-- Spring placeholder configurer -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:clobaframe.properties</value>
				<value>classpath:web.properties</value>
			</list>
		</property>
	</bean>

	<!-- Application Message Bundle -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:org/archboy/clobaframe/web/i18n/messages"/>
		<property name="cacheSeconds" value="-1"/>
		<!--
			Set the number of seconds to cache loaded properties files.
			Default is "-1", indicating to cache forever (just like java.util.ResourceBundle).
			A positive number will cache loaded properties files for the given number of seconds. This is essentially the interval between refresh checks. Note that a refresh attempt will first check the last-modified timestamp of the file before actually reloading it; so if files don't change, this interval can be set rather low, as refresh attempts will not actually reload.
			A value of "0" will check the last-modified timestamp of the file on every message access. Do not use this in a production environment!
		-->
	</bean>
</beans>

